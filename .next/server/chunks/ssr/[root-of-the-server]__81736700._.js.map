{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aadit/OneDrive/Desktop/portfolio/portfolio-new-new-new-new/src/components/ThemeProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\ntype Theme = \"light\" | \"dark\" | \"system\";\r\n\r\ntype ThemeProviderProps = {\r\n  children: React.ReactNode;\r\n  defaultTheme?: Theme;\r\n  storageKey?: string;\r\n};\r\n\r\ntype ThemeProviderState = {\r\n  theme: Theme;\r\n  setTheme: (theme: Theme) => void;\r\n};\r\n\r\nconst initialState: ThemeProviderState = {\r\n  theme: \"system\",\r\n  setTheme: () => null,\r\n};\r\n\r\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\r\n\r\nexport function ThemeProvider({ children, defaultTheme = \"system\", storageKey = \"theme\", ...props }: ThemeProviderProps) {\r\n  const [theme, setTheme] = useState<Theme>(defaultTheme);\r\n\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem(storageKey) as Theme | null;\r\n    if (savedTheme) {\r\n      setTheme(savedTheme);\r\n    } else if (defaultTheme === \"system\") {\r\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\r\n      setTheme(systemTheme);\r\n    }\r\n  }, [defaultTheme, storageKey]);\r\n\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    root.classList.remove(\"light\", \"dark\");\r\n\r\n    if (theme === \"system\") {\r\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\r\n      root.classList.add(systemTheme);\r\n    } else {\r\n      root.classList.add(theme);\r\n    }\r\n  }, [theme]);\r\n\r\n  const value = {\r\n    theme,\r\n    setTheme: (theme: Theme) => {\r\n      localStorage.setItem(storageKey, theme);\r\n      setTheme(theme);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <ThemeProviderContext.Provider {...props} value={value}>\r\n      {children}\r\n    </ThemeProviderContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeProviderContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n\r\n  return context;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAiBA,MAAM,eAAmC;IACvC,OAAO;IACP,UAAU,IAAM;AAClB;AAEA,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAsB;AAExD,SAAS,cAAc,EAAE,QAAQ,EAAE,eAAe,QAAQ,EAAE,aAAa,OAAO,EAAE,GAAG,OAA2B;IACrH,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS;IAE1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,SAAS;QACX,OAAO,IAAI,iBAAiB,UAAU;YACpC,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACzF,SAAS;QACX;IACF,GAAG;QAAC;QAAc;KAAW;IAE7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,OAAO,OAAO,QAAQ,CAAC,eAAe;QAC5C,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS;QAE/B,IAAI,UAAU,UAAU;YACtB,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;YACzF,KAAK,SAAS,CAAC,GAAG,CAAC;QACrB,OAAO;YACL,KAAK,SAAS,CAAC,GAAG,CAAC;QACrB;IACF,GAAG;QAAC;KAAM;IAEV,MAAM,QAAQ;QACZ;QACA,UAAU,CAAC;YACT,aAAa,OAAO,CAAC,YAAY;YACjC,SAAS;QACX;IACF;IAEA,qBACE,8OAAC,qBAAqB,QAAQ;QAAE,GAAG,KAAK;QAAE,OAAO;kBAC9C;;;;;;AAGP;AAEO,MAAM,WAAW;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT","debugId":null}}]
}